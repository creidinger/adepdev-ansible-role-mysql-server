---
- name: Install MySQL Packages
  package:
    pkg: "{{ item }}"
    state: latest
  loop:
    - mysql-server
    - mysql-client
    - python-mysqldb

- name: Update root password for all root accounts
  mysql_user:
    name: root
    host: "{{ item }}"
    check_implicit_admin: yes
    password: "{{ mysql_root_password }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
  loop:
    - 127.0.0.1
    - ::1
    - localhost

- name: check if DB exists
  shell: "mysql -uroot -p{{ mysql_root_password }} -e 'SHOW DATABASES;'"
  register: databases

- name: Create backup of DB if it already exists
  mysql_db:
    name: "{{ mysql_database }}"
    state: dump
    login_user: root
    login_password: "{{ mysql_root_password }}"
    target: "{{ db_backup_path }}/backup_{{ mysql_database }}_{{ ansible_date_time.epoch }}.sql"
  when: "databases.stdout.find('{{ mysql_database }}') != -1"
  ignore_errors: yes

- name: Destroy database
  mysql_db:
    name: "{{ mysql_database }}"
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Create database
  mysql_db:
    name: "{{ mysql_database }}"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Deploy database files
  copy:
    src: "../src/sql/{{ item }}"
    dest: "~/{{ item }}"
  loop:
      - "{{ mysql_backup_filename }}"

- name: Create users
  mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    priv: "{{ mysql_database }}.*:ALL"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Import
  mysql_db:
    name: "{{ mysql_database }}"
    state: import
    login_user: root
    login_password: "{{ mysql_root_password }}"
    target: "{{ item }}"
  loop:
      - "~/{{ mysql_backup_filename }}"

- name: Clean up database files
  file:
    path: "~/{{ mysql_backup_filename }}"
    state: absent

# The following 3 commands are due to the apparent inability for Ansible to set the root password properly
# in MYSQL 5.7.3+. This may be redundant in a future update.
- name: Copy over rootpass.sql file to change root@localhost password (mysql 5.7.3+ workaround)
  template:
    src: "templates/{{ item }}.j2"
    dest: "~/{{ item }}"
    owner: root
    mode: 0600
  loop:
      - rootpass.sql
      - my.cnf

- name: rename my.cnf
  command: mv ~/my.cnf ~/.my.cnf

- name: Import rootpass.sql file
  mysql_db:
    state: import
    name: mysql
    target: ~/rootpass.sql

- name: Clean up db and cnf file
  file:
    path: ~/{{ item }}
    state: absent
  loop:
      - rootpass.sql
      - .my.cnf
